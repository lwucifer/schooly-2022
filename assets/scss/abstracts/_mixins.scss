@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin absCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin trapezoid($width, $height, $sides, $color) {
    border-bottom: $height solid $color;
    border-left: $sides solid transparent;
    border-right: $sides solid transparent;
    height: 0;
    width: $width;
}

@mixin textWithTrapezoid($width, $height, $sides, $color) {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: $width;
    height: $height;
    padding: 0 $sides;

    > * {
        position: relative;
    }

    &:before {
        content: "";
        position: absolute;
        left: 0;
        bottom: 0;
        @include trapezoid($width, $height, $sides, $color);
    }
}

@mixin set-line($opts) {
	$setLineOpts: extend((
		'lineClamp': 1,
		'lineHeight': 1.12em,
        'fixedHeight': false,
        'fontSize': $font-size-base
	), $opts, true);

    $lineClamp: map-get($setLineOpts, 'lineClamp');
    $lineHeightNumberOnly: strip-unit(map-get($setLineOpts, 'lineHeight'));
	$lineHeight: decimal-floor($lineHeightNumberOnly, 1); // Floor because of line-height in Chrome is floor
	$fixedHeight: map-get($setLineOpts, 'fixedHeight');

	display: -webkit-box;
	-webkit-box-orient: vertical;
	-moz-box-orient: vertical;
	box-orient: vertical;
	-webkit-line-clamp: $lineClamp;
	line-height: $lineHeight;
	overflow: hidden;
	text-overflow: ellipsis;

	@if $fixedHeight {
		height: $lineHeight * $lineClamp * 1em;
	} @else {
		max-height: $lineHeight * $lineClamp * 1em;
	}
}

@mixin text-overflow {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

/// Mixin to customize scrollbars
/// Beware, this does not work in all browsers
/// @author Hugo Giraudel - be modified
/// @param {Length} $size - Horizontal scrollbar's height and vertical scrollbar's width
/// @param {Color} $foreground-color - Scrollbar's color
/// @param {Color} $background-color [mix($foreground-color, white, 50%)] - Scrollbar's color
/// @example scss - Scrollbar styling
///   @include scrollbars(.5em, slategray);
@mixin scrollbars($size, $foreground-color, $background-color: mix($foreground-color, white,  50%), $border-radius: 0) {
    // For Google Chrome
    &::-webkit-scrollbar {
        width:  $size;
        height: $size;
    }
  
    &::-webkit-scrollbar-thumb {
        background: $foreground-color;
        border-radius: $border-radius;
    }
  
    &::-webkit-scrollbar-track {
        background: $background-color;
        border-radius: $border-radius;
    }
  
    // For Internet Explorer
    scrollbar-face-color: $foreground-color;
    scrollbar-track-color: $background-color;

    // For Firefox
    // Check the Browser compatibility table carefully before using this.
    @if ($size > 10px) {
        scrollbar-width: thin;
    } @else {
        scrollbar-width: auto;
    }
    scrollbar-color: $foreground-color;
}

@mixin box($padding: null, $border: 1px solid $color-disabled, $shadow: null) {
    background: #FFFFFF;
    border-radius: $border-radius-common;
    @if $padding {
        padding: $padding;
    }
    @if $border {
        border: $border;
    }
    @if $shadow {
        box-shadow: $shadow;
    }
}